name: Haskell CI

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1
      with:
        ghc-version: '9.0.1'
        cabal-version: '3.4'
    - uses: actions/checkout@v1

    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Ninja
      uses: llvm/actions/install-ninja@main
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Clone LLVM repo
      uses: actions/checkout@v2
      with:
        repository: llvm/llvm-project
        ref: 'main'
        path: 'llvm_src'
    - name: Install dependencies
      run: |
        cabal update
        cabal build --only-dependencies --enable-tests --enable-benchmarks
        mkdir llvm_src/build
        cd llvm_src/build
        CXX=clang++ CC=clang cmake ../llvm -G Ninja -DLLVM_ENABLE_PROJECTS=mlir -DLLVM_TARGETS_TO_BUILD="host" -DLLVM_BUILD_LLVM_DYLIB=ON -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_EXAMPLES=OFF -DCMAKE_INSTALL_PREFIX=../../mlir_shared
        ninja -j4 install
    - name: Run test
      run: |
        export PATH=$PATH:mlir_shared/bin
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:mlir_shared/lib
        cabal build --enable-tests --enable-benchmarks all
        cabal test all
