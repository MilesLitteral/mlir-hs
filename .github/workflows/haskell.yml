name: Haskell CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Always regenerate once every 4 hour
    - cron:  '15 */4 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1
      with:
        ghc-version: '9.0.1'
        cabal-version: '3.4'
    - uses: actions/checkout@v1

    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Ninja
      uses: llvm/actions/install-ninja@main
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Clone LLVM repo
      uses: actions/checkout@v2
      with:
        repository: llvm/llvm-project
        ref: 'main'
        path: 'llvm_src'
    - name: Ccache for C++ compilation
      uses: hendrikmuhs/ccache-action@v1.0.4
    - name: Install dependencies (Haskell)
      run: |
        cabal update
        cabal build --only-dependencies --enable-tests --enable-benchmarks
    - name: Install dependencies (LLVM & MLIR)
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        cmake -S llvm_src/llvm -B llvm_src/build -DLLVM_CCACHE_BUILD=ON -DLLVM_ENABLE_PROJECTS=mlir \
          -DLLVM_TARGETS_TO_BUILD="host" -DLLVM_BUILD_LLVM_DYLIB=ON -DCMAKE_BUILD_TYPE=Release \
          -DLLVM_BUILD_EXAMPLES=OFF -DCMAKE_INSTALL_PREFIX=$HOME/mlir_shared
        cd llvm_src/build && ninja -j4 install
        echo "$HOME/mlir_shared/bin" >> $GITHUB_PATH
      env:
        CC: clang
        CXX: clang++
        CMAKE_GENERATOR: Ninja
    - name: Build mlir-hs
      run: |
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/mlir_shared/lib
        cabal build --enable-tests --enable-benchmarks all
    - name: Run mlir-hs tests
      run: |
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/mlir_shared/lib
        cabal test all
